// Generated by Selenium IDE
package org.ual.hmis.equipo20;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class DinamicaSuiteTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
	System.setProperty("webdriver.gecko.driver", "drivers/geckodriver.exe"); 
	System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe"); 
	  
    ChromeOptions cOptions = new ChromeOptions();
    cOptions.setHeadless(true);
    FirefoxOptions fOptions = new FirefoxOptions();
    fOptions.setHeadless(true);
	   
    driver = new ChromeDriver(cOptions);
    // driver = new FirefoxDriver(fOptions); 
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testLoginIncorrecto() {
    // Test name: testLoginIncorrecto
    // Step # | name | target | value
    // 1 | open | /login | 
    driver.get("https://my-app-1718049484356.azurewebsites.net/login");
    // 2 | click | id=vaadinLoginOverlayWrapper | 
    driver.findElement(By.id("vaadinLoginOverlayWrapper")).click();
    // 3 | type | id=input-vaadin-text-field-6 | user
    driver.findElement(By.id("input-vaadin-text-field-6")).sendKeys("user");
    // 4 | click | id=input-vaadin-password-field-7 | 
    driver.findElement(By.id("input-vaadin-password-field-7")).click();
    // 5 | type | id=input-vaadin-password-field-7 | pass
    driver.findElement(By.id("input-vaadin-password-field-7")).sendKeys("pass");
    // 6 | close |  | 
    driver.close();
    // 7 | assertText | id=vaadinLoginFormWrapper | Log in\nIncorrect username or password\nCheck that you have entered the correct username and password and try again.\nUsername\nUsername is required\nPassword\nLog in
    assertThat(driver.findElement(By.id("vaadinLoginFormWrapper")).getText(), is("Log in\\\\nIncorrect username or password\\\\nCheck that you have entered the correct username and password and try again.\\\\nUsername\\\\nUsername is required\\\\nPassword\\\\nLog in"));
  }
  @Test
  public void testLoginCorrecto() {
    // Test name: testLoginCorrecto
    // Step # | name | target | value
    // 1 | open | /login | 
    driver.get("https://my-app-1718049484356.azurewebsites.net/login");
    // 2 | click | id=input-vaadin-text-field-6 | 
    driver.findElement(By.id("input-vaadin-text-field-6")).click();
    // 3 | type | id=input-vaadin-text-field-6 | user
    driver.findElement(By.id("input-vaadin-text-field-6")).sendKeys("user");
    // 4 | type | id=input-vaadin-password-field-7 | user
    driver.findElement(By.id("input-vaadin-password-field-7")).sendKeys("user");
    // 5 | click | css=vaadin-button:nth-child(2) | 
    driver.findElement(By.cssSelector("vaadin-button:nth-child(2)")).click();
    // 6 | click | css=vaadin-app-layout | 
    driver.findElement(By.cssSelector("vaadin-app-layout")).click();
    // 7 | assertText | css=vaadin-menu-bar-item > div | John Normal
    assertThat(driver.findElement(By.cssSelector("vaadin-menu-bar-item > div")).getText(), is("John Normal"));
    // 8 | assertTitle | Master-Detail | 
    assertThat(driver.getTitle(), is("Master-Detail"));
  }
  @Test
  public void testLogout() {
    // Test name: testLogout
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://my-app-1718049484356.azurewebsites.net/");
    // 2 | setWindowSize | 1227x841 | 
    driver.manage().window().setSize(new Dimension(1227, 841));
    // 3 | waitForText | css=.m-0 | Master-Detail
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.textToBe(By.cssSelector(".m-0"), "Master-Detail"));
    }
    // 4 | assertTitle | Master-Detail | 
    assertThat(driver.getTitle(), is("Master-Detail"));
    // 5 | click | css=vaadin-menu-bar-item > div | 
    driver.findElement(By.cssSelector("vaadin-menu-bar-item > div")).click();
    // 6 | verifyText | css=vaadin-menu-bar-list-box > vaadin-menu-bar-item | Sign out
    assertThat(driver.findElement(By.cssSelector("vaadin-menu-bar-list-box > vaadin-menu-bar-item")).getText(), is("Sign out"));
    // 7 | click | css=vaadin-menu-bar-list-box > vaadin-menu-bar-item | 
    driver.findElement(By.cssSelector("vaadin-menu-bar-list-box > vaadin-menu-bar-item")).click();
    // 8 | click | id=vaadinLoginFormWrapper | 
    driver.findElement(By.id("vaadinLoginFormWrapper")).click();
    // 9 | verifyText | id=vaadinLoginFormWrapper | Log in\nUsername\nUsername is required\nPassword\nLog in
    assertThat(driver.findElement(By.id("vaadinLoginFormWrapper")).getText(), is("Log in\\\\nUsername\\\\nUsername is required\\\\nPassword\\\\nLog in"));
  }
  @Test
  public void testNuevaEntrada() {
    // Test name: testNuevaEntrada
    // Step # | name | target | value
    // 1 | open | /?continue | 
    driver.get("https://my-app-1718049484356.azurewebsites.net/?continue");
    // 2 | setWindowSize | 1227x841 | 
    driver.manage().window().setSize(new Dimension(1227, 841));
    // 3 | assertText | css=vaadin-grid-cell-content:nth-child(21) | 1395 Jigror Park
    assertThat(driver.findElement(By.cssSelector("vaadin-grid-cell-content:nth-child(21)")).getText(), is("1395 Jigror Park"));
    // 4 | assertEditable | id=input-vaadin-text-field-16 | 
    {
      WebElement element = driver.findElement(By.id("input-vaadin-text-field-16"));
      Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
      assertTrue(isEditable);
    }
    // 5 | click | id=input-vaadin-text-field-16 | 
    driver.findElement(By.id("input-vaadin-text-field-16")).click();
    // 6 | assertEditable | id=input-vaadin-text-field-18 | 
    {
      WebElement element = driver.findElement(By.id("input-vaadin-text-field-18"));
      Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
      assertTrue(isEditable);
    }
    // 7 | assertElementPresent | css=vaadin-button:nth-child(1) | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("vaadin-button:nth-child(1)"));
      assert(elements.size() > 0);
    }
    // 8 | click | id=input-vaadin-text-field-18 | 
    driver.findElement(By.id("input-vaadin-text-field-18")).click();
    // 9 | type | id=input-vaadin-text-field-16 | street
    driver.findElement(By.id("input-vaadin-text-field-16")).sendKeys("street");
    // 10 | type | id=input-vaadin-text-field-18 | city
    driver.findElement(By.id("input-vaadin-text-field-18")).sendKeys("city");
    // 11 | click | css=vaadin-button:nth-child(1) | 
    driver.findElement(By.cssSelector("vaadin-button:nth-child(1)")).click();
    // 12 | assertElementPresent | css=vaadin-notification-card | 
    {
      List<WebElement> elements = driver.findElements(By.cssSelector("vaadin-notification-card"));
      assert(elements.size() > 0);
    }
    // 13 | mouseDownAt | css=vaadin-grid | 641,680
    {
      WebElement element = driver.findElement(By.cssSelector("vaadin-grid"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).clickAndHold().perform();
    }
    // 14 | mouseMoveAt | css=vaadin-grid | 641,680
    {
      WebElement element = driver.findElement(By.cssSelector("vaadin-grid"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 15 | mouseUpAt | css=vaadin-grid | 641,680
    {
      WebElement element = driver.findElement(By.cssSelector("vaadin-grid"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).release().perform();
    }
    // 16 | click | css=vaadin-scroller | 
    driver.findElement(By.cssSelector("vaadin-scroller")).click();
  }
  @Test
  public void testVerModificarEntrada() {
    // Test name: testVerModificarEntrada
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://my-app-1718049484356.azurewebsites.net/");
    // 2 | click | css=vaadin-grid-cell-content:nth-child(21) | 
    driver.findElement(By.cssSelector("vaadin-grid-cell-content:nth-child(21)")).click();
    // 3 | waitForText | css=vaadin-grid-cell-content:nth-child(6) > vaadin-grid-sorter | Street
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.textToBe(By.cssSelector("vaadin-grid-cell-content:nth-child(6) > vaadin-grid-sorter"), "Street"));
    }
    // 4 | assertValue | id=input-vaadin-text-field-16 | 1395 Jigror Park
    {
      String value = driver.findElement(By.id("input-vaadin-text-field-16")).getAttribute("value");
      assertThat(value, is("1395 Jigror Park"));
    }
    // 5 | click | css=vaadin-grid-cell-content:nth-child(63) | 
    driver.findElement(By.cssSelector("vaadin-grid-cell-content:nth-child(63)")).click();
    // 6 | assertValue | id=input-vaadin-text-field-18 | Zudsova
    {
      String value = driver.findElement(By.id("input-vaadin-text-field-18")).getAttribute("value");
      assertThat(value, is("Zudsova"));
    }
    // 7 | click | css=.editor | 
    driver.findElement(By.cssSelector(".editor")).click();
    // 8 | doubleClick | id=input-vaadin-text-field-18 | 
    {
      WebElement element = driver.findElement(By.id("input-vaadin-text-field-18"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    // 9 | type | id=input-vaadin-text-field-18 | Almería
    driver.findElement(By.id("input-vaadin-text-field-18")).sendKeys("Almería");
    // 10 | click | css=vaadin-button:nth-child(1) | 
    driver.findElement(By.cssSelector("vaadin-button:nth-child(1)")).click();
    // 11 | click | css=vaadin-grid-cell-content:nth-child(61) | 
    driver.findElement(By.cssSelector("vaadin-grid-cell-content:nth-child(61)")).click();
    // 12 | assertText | css=vaadin-grid-cell-content:nth-child(63) | Almería
    assertThat(driver.findElement(By.cssSelector("vaadin-grid-cell-content:nth-child(63)")).getText(), is("Almería"));
  }
}
